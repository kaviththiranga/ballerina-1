/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
 
apply from: "$rootDir/gradle/javaProjectWithExtBalo.gradle"

configurations {
    balx
    generatedBalx
}

configurations.testCompileClasspath {
    resolutionStrategy {
        preferProjectModules()
    }
}

// Task to generate balx for the pull command.
// task genBalxForPull(type: JavaExec) {
//     dependsOn createBalHome
//     systemProperty "ballerina.home", "$buildDir/ballerina-home/main/"

//     main 'org.ballerinalang.cli.utils.GenerateBalx'
//     classpath = sourceSets.main.runtimeClasspath

//     def targetDir = "$buildDir/generated-balx/packaging_pull"
//     outputs.dir(targetDir)
//     // Do not cache the output
//     outputs.cacheIf { true }

//     def src = "src/main/ballerina/packaging_pull"
//     def fileName = "packaging_pull.bal"
//     def target = "$targetDir/packaging_pull.balx"
//     def jvmTarget = true;
//     args(src, fileName, target, jvmTarget)
// }

// // Task to generate balx for the push command.
// task genBalxForPush(type: JavaExec) {
//     dependsOn createBalHome
//     systemProperty "ballerina.home", "$buildDir/ballerina-home/main"

//     main 'org.ballerinalang.cli.utils.GenerateBalx'
//     classpath = sourceSets.main.runtimeClasspath

//     def targetDir = "$buildDir/generated-balx/packaging_push"
//     outputs.dir(targetDir)
//     // Do not cache the output
//     outputs.cacheIf { true }

//     def src = "src/main/ballerina/packaging_push"
//     def fileName = "packaging_push.bal"
//     def target = "$targetDir/packaging_push.balx"
//     args(src, fileName, target)
// }

// // Task to generate balx for the search command.
// task genBalxForSearch(type: JavaExec) {
//     dependsOn createBalHome
//     systemProperty "ballerina.home", "$buildDir/ballerina-home/main"

//     main 'org.ballerinalang.cli.utils.GenerateBalx'
//     classpath = sourceSets.main.runtimeClasspath

//     def targetDir = "$buildDir/generated-balx/packaging_search"
//     outputs.dir(targetDir)
//     // Do not cache the output
//     outputs.cacheIf { true }

//     def src = "src/main/ballerina/packaging_search"
//     def fileName = "packaging_search.bal"
//     def target = "$targetDir/packaging_search.balx"
//     args(src, fileName, target)
// }

// // Task to generate balx for the token updater.
// task genBalxForTokenUpdater(type: JavaExec) {
    
//     dependsOn createBalHome
//     systemProperty "ballerina.home", "$buildDir/ballerina-home/main"

//     main 'org.ballerinalang.cli.utils.GenerateBalx'
//     classpath = sourceSets.main.runtimeClasspath

//     def targetDir = "$buildDir/generated-balx/packaging_token_updater"
//     outputs.dir(targetDir)
//     // Do not cache the output
//     outputs.cacheIf { true }

//     def src = "src/main/ballerina/packaging_token_updater"
//     def fileName = "packaging_token_updater.bal"
//     def target = "$targetDir/packaging_token_updater.balx"
//     args(src, fileName, target)
// }

dependencies {
    baloImplementation project(path: ':ballerina-auth', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-lang:annotations', configuration: 'baloImplementation')
    baloImplementation project(path: ":ballerina-cache", configuration: 'baloImplementation')
    baloImplementation project(path: ":ballerina-config-api", configuration: 'baloImplementation')
    baloImplementation project(path: ":ballerina-crypto", configuration: 'baloImplementation')
    baloImplementation project(path: ":ballerina-encoding", configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-http', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-internal', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-io', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-log-api', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-math', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-mime', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-reflect', configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-runtime-api', configuration: 'baloImplementation')
    baloImplementation project(path: ":ballerina-system", configuration: 'baloImplementation')
    baloImplementation project(path: ":ballerina-task", configuration: 'baloImplementation')
    baloImplementation project(path: ":ballerina-time", configuration: 'baloImplementation')
    baloImplementation project(path: ':ballerina-utils', configuration: 'baloImplementation')

    implementation project(':ballerina-lang')
    implementation project(':ballerina-core')
    implementation project(":ballerina-crypto")
    implementation project(':ballerina-log-api')
    implementation project(":ballerina-auth")
    implementation project(":ballerina-cache")
    implementation project(":ballerina-config-api")
    implementation project(':ballerina-encoding')
    implementation project(':ballerina-math')
    implementation project(':ballerina-reflect')
    implementation project(':ballerina-runtime-api')
    implementation project(':ballerina-task')
    implementation project(':ballerina-time')
    implementation 'org.slf4j:slf4j-api'
}

//artifacts {
//    balx file: file("src/main/ballerina/packaging_pull"), builtBy: genBalxForPull
//    balx file: file("src/main/ballerina/packaging_push"), builtBy: genBalxForPush
//    balx file: file("src/main/ballerina/packaging_search"), builtBy: genBalxForSearch
//    balx file: file("src/main/ballerina/packaging_token_updater"), builtBy: genBalxForTokenUpdater
//}

jar {
    from("$buildDir/generated-balx") {
        into "META-INF/ballerina"
    }

    // The jar should be created after balxs for push, pull, search and token updater are created.
    //dependsOn = [genBalxForPull, genBalxForPush, genBalxForSearch, genBalxForTokenUpdater]
}

clean {
    delete "$buildDir/generated-balx"
}

description = 'Ballerina - Cli Utils'

configurations.all {
    resolutionStrategy.preferProjectModules()
}
